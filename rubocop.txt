Inspecting 96 files
C..WWEEEW.CCWCC.....W......C..........................CC......W.................................

Offenses:

Gemfile:44:20: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem 'simplecov', :require => false
                   ^^^^^^^^^^^
Gemfile:77:5: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
    ^^^^^^^^^^^^^^^^^^^
Gemfile:77:26: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
                         ^^^^^^^^
Gemfile:78:1: C: [Corrected] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem escompress should appear before tailwindcss-rails.
gem "escompress"
^^^^^^^^^^^^^^^^
Gemfile:78:5: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "escompress"
    ^^^^^^^^^^^^
Gemfile:78:26: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
                         ^^^^^^^^
Gemfile:79:1: C: [Corrected] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem ransack should appear before tailwindcss-rails.
gem 'ransack'
^^^^^^^^^^^^^
Gemfile:79:5: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
    ^^^^^^^^^^^^^^^^^^^
Gemfile:79:26: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "tailwindcss-rails", "~> 2.0"
                         ^^^^^^^^
app/controllers/accounts_controller.rb:4:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:13:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:15:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2 or @current_user.status_id == 1
    ^^^^^^
app/controllers/accounts_controller.rb:15:41: C: [Corrected] Style/AndOr: Use || instead of or.
    unless @current_user.status_id == 2 or @current_user.status_id == 1
                                        ^^
app/controllers/accounts_controller.rb:16:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:25:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:26:37: C: [Corrected] Style/AndOr: Use || instead of or.
    if @current_user.status_id == 1 or @current_user.status_id == 2 or @current_user.id == @account.id
                                    ^^
app/controllers/accounts_controller.rb:26:69: C: [Corrected] Style/AndOr: Use || instead of or.
    if @current_user.status_id == 1 or @current_user.status_id == 2 or @current_user.id == @account.id
                                                                    ^^
app/controllers/accounts_controller.rb:28:16: C: [Corrected] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      @mypoints=@points.where(account_id: @account.id)
               ^
app/controllers/accounts_controller.rb:29:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      @total_points = @mypoints.all.sum (:Points)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:29:40: W: [Corrected] Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
      @total_points = @mypoints.all.sum (:Points)
                                       ^
app/controllers/accounts_controller.rb:31:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:33:1: C: [Corrected] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/accounts_controller.rb:38:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:44:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:50:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:64:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:79:8: C: [Corrected] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if ((@current_user.status_id == 1) || (@current_user.status_id == 2))
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:79:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:80:5: C: [Corrected] Layout/SpaceAroundKeyword: Space after keyword if is missing.
    if(@current_user.status_id == 1 or @current_user.status_id == 2)
    ^^
app/controllers/accounts_controller.rb:80:37: C: [Corrected] Style/AndOr: Use || instead of or.
    if(@current_user.status_id == 1 or @current_user.status_id == 2)
                                    ^^
app/controllers/accounts_controller.rb:81:16: C: [Corrected] Rails/SaveBang: Use update! instead of update if the return value is not checked.
      @account.update(:status_id => 4)
               ^^^^^^
app/controllers/accounts_controller.rb:81:23: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      @account.update(:status_id => 4)
                      ^^^^^^^^^^^^^
app/controllers/accounts_controller.rb:87:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:4:1: C: [Corrected] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    add_flash_types :info, :error, :success
^^^^
app/controllers/application_controller.rb:5:1: C: [Corrected] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def get_user_email
^^^^
app/controllers/application_controller.rb:5:9: C: [Todo] Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def get_user_email
        ^^^^^^^^^^^^^^
app/controllers/application_controller.rb:5:22: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
  def get_user_email # rubocop:todo Naming/AccessorMethodName # rubocop:todo Style/InlineComment
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:5:22: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  def get_user_email # rubocop:todo Naming/AccessorMethodName
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:5:64: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
  def get_user_email # rubocop:todo Naming/AccessorMethodName, Style/InlineComment, Style/InlineComment
                                                               ^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:7:7: W: [Todo] Lint/UselessAssignment: Useless assignment to variable - email.
      email = @user["email"]
      ^^^^^
app/controllers/application_controller.rb:7:21: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email = @user["email"]
                    ^^^^^^^
app/controllers/application_controller.rb:7:28: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    email = @user['email'] # rubocop:todo Lint/UselessAssignment # rubocop:todo Style/InlineComment
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:7:28: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    email = @user['email'] # rubocop:todo Lint/UselessAssignment
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:7:67: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
    email = @user['email'] # rubocop:todo Lint/UselessAssignment, Style/InlineComment, Style/InlineComment
                                                                  ^^^^^^^^^^^^^^^^^^^
app/controllers/auth0_controller.rb:10:5: C: [Corrected] Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
    puts auth_info[:uid]
    ^^^^
app/controllers/auth0_controller.rb:10:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    puts auth_info[:uid]
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/auth0_controller.rb:24:5: C: [Todo] Style/GlobalVars: Do not introduce global variables.
    $current_user = nil
    ^^^^^^^^^^^^^
app/controllers/auth0_controller.rb:47:7: C: [Todo] Style/GlobalVars: Do not introduce global variables.
      $current_user = Account.find_by uuid: session[:useruuid]
      ^^^^^^^^^^^^^
app/controllers/auth0_controller.rb:47:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      $current_user = Account.find_by uuid: session[:useruuid]
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/auth0_controller.rb:48:7: E: [Todo] Lint/Syntax: unexpected token tIDENTIFIER
(Using Ruby 2.7 parser; configure using TargetRubyVersion parameter, under AllCops)
      redirect_to('/dashboard')
      ^^^^^^^^^^^
app/controllers/auth0_controller.rb:51:21: C: [Corrected] Rails/SaveBang: Use save! instead of save if the return value is not checked.
      user_by_email.save
                    ^^^^
app/controllers/concerns/secured.rb:19:9: C: [Todo] Style/GlobalVars: Do not introduce global variables.
        $current_user = Account.find_by uuid: session[:useruuid]
        ^^^^^^^^^^^^^
app/controllers/concerns/secured.rb:19:25: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        $current_user = Account.find_by uuid: session[:useruuid]
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/concerns/secured.rb:20:7: E: [Todo] Lint/Syntax: unexpected token kELSIF
(Using Ruby 2.7 parser; configure using TargetRubyVersion parameter, under AllCops)
      elsif user_by_email
      ^^^^^
app/controllers/concerns/secured.rb:22:23: C: [Corrected] Rails/SaveBang: Use save! instead of save if the return value is not checked.
        user_by_email.save
                      ^^^^
app/controllers/dashboard_controller.rb:5:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:7:5: C: [Todo] Style/GlobalVars: Do not introduce global variables.
    $current_user = Account.find_by uuid: session[:useruuid]
    ^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:7:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    $current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:8:5: E: [Todo] Lint/Syntax: unexpected token tIVAR
(Using Ruby 2.7 parser; configure using TargetRubyVersion parameter, under AllCops)
    @user = session[:userinfo]
    ^^^^^
app/controllers/dashboard_controller.rb:10:27: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @events = Event.where("? >= ?",:Date, Time.now).order(:Date).limit(3)
                          ^^^^^^^^
app/controllers/dashboard_controller.rb:10:35: C: [Corrected] Layout/SpaceAfterComma: Space missing after comma.
    @events = Event.where("? >= ?",:Date, Time.now).order(:Date).limit(3)
                                  ^
app/controllers/dashboard_controller.rb:10:48: C: [Corrected] Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    @events = Event.where("? >= ?",:Date, Time.now).order(:Date).limit(3)
                                               ^^^
app/controllers/dashboard_controller.rb:11:5: W: [Todo] Lint/UselessAssignment: Useless assignment to variable - usr_email.
    usr_email = @user['email']
    ^^^^^^^^^
app/controllers/dashboard_controller.rb:12:16: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @account = Account.find_by uuid: session[:useruuid]
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:13:14: C: [Corrected] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    @mypoints=Point.where(account_id: @account.id)
             ^
app/controllers/dashboard_controller.rb:14:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @total_points = @mypoints.all.sum (:Points)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:14:38: W: [Corrected] Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
    @total_points = @mypoints.all.sum (:Points)
                                     ^
app/controllers/dashboard_controller.rb:17:1: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/dashboard_controller.rb:22:3: C: [Corrected] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 0.
  def greeting
  ^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:26:31: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    five_pm = Time.now.change(:hour => 17 ).to_i
                              ^^^^^^^^
app/controllers/dashboard_controller.rb:26:42: C: [Corrected] Layout/SpaceInsideParens: Space inside parentheses detected.
    five_pm = Time.now.change(:hour => 17 ).to_i
                                         ^
app/controllers/dashboard_controller.rb:27:32: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    eight_pm = Time.now.change(:hour => 20 ).to_i
                               ^^^^^^^^
app/controllers/dashboard_controller.rb:27:43: C: [Corrected] Layout/SpaceInsideParens: Space inside parentheses detected.
    eight_pm = Time.now.change(:hour => 20 ).to_i
                                          ^
app/controllers/dashboard_controller.rb:28:9: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    case 
        ^
app/controllers/dashboard_controller.rb:29:7: C: [Corrected] Layout/CaseIndentation: Indent when as deep as case.
      when midnight.upto(noon).include?(current_time)
      ^^^^
app/controllers/dashboard_controller.rb:30:9: C: [Corrected] Style/RedundantReturn: Redundant return detected.
        return "Good Morning"
        ^^^^^^
app/controllers/dashboard_controller.rb:30:16: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        return "Good Morning"
               ^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:31:7: C: [Corrected] Layout/CaseIndentation: Indent when as deep as case.
      when noon.upto(five_pm).include?(current_time)
      ^^^^
app/controllers/dashboard_controller.rb:32:9: C: [Corrected] Style/RedundantReturn: Redundant return detected.
        return  "Good Afternoon"
        ^^^^^^
app/controllers/dashboard_controller.rb:32:15: C: [Corrected] Layout/ExtraSpacing: Unnecessary spacing detected.
        return  "Good Afternoon"
              ^
app/controllers/dashboard_controller.rb:32:17: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        return  "Good Afternoon"
                ^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:33:7: C: [Corrected] Layout/CaseIndentation: Indent when as deep as case.
      when five_pm.upto(eight_pm).include?(current_time)
      ^^^^
app/controllers/dashboard_controller.rb:34:9: C: [Corrected] Style/RedundantReturn: Redundant return detected.
        return "Good Evening"
        ^^^^^^
app/controllers/dashboard_controller.rb:34:16: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        return "Good Evening"
               ^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:35:7: C: [Corrected] Layout/CaseIndentation: Indent when as deep as case.
      when eight_pm.upto(midnight + 1.day).include?(current_time)
      ^^^^
app/controllers/dashboard_controller.rb:36:9: C: [Corrected] Style/RedundantReturn: Redundant return detected.
        return "Good Night"
        ^^^^^^
app/controllers/dashboard_controller.rb:36:16: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        return "Good Night"
               ^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:40:1: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/events_controller.rb:5:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/events_controller.rb:10:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:11:5: C: [Corrected] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
    if @current_user.status_id == 1 ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:12:7: C: [Corrected] Layout/IndentationWidth: Use 2 (not -8) spaces for indentation.
      Event.all.order(:Date)
      ^^^^^^^^
app/controllers/events_controller.rb:13:5: C: [Corrected] Layout/ElseAlignment: Align else with if.
    else
    ^^^^
app/controllers/events_controller.rb:14:7: C: [Corrected] Layout/IndentationWidth: Use 2 (not -8) spaces for indentation.
      Event.where.not(type_id: 5).order(:Date)
      ^^^^^^^^
app/controllers/events_controller.rb:20:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:25:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    @hasSignedUp = false
    ^^^^^^^^^^^^
app/controllers/events_controller.rb:25:26: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    @hasSignedUp = false # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:25:26: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    @hasSignedUp = false # rubocop:todo Naming/VariableName
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:25:62: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
    @hasSignedUp = false # rubocop:todo Naming/VariableName, Style/InlineComment, Style/InlineComment
                                                             ^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:27:1: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/events_controller.rb:28:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @signup
    ^^
app/controllers/events_controller.rb:29:7: C: [Todo] Naming/VariableName: Use snake_case for variable names.
      @hasSignedUp = true
      ^^^^^^^^^^^^
app/controllers/events_controller.rb:29:27: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
      @hasSignedUp = true # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:29:27: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
      @hasSignedUp = true # rubocop:todo Naming/VariableName
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:29:63: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
      @hasSignedUp = true # rubocop:todo Naming/VariableName, Style/InlineComment, Style/InlineComment
                                                              ^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:31:1: C: [Corrected] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/events_controller.rb:36:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/events_controller.rb:36:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:37:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/events_controller.rb:38:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/dashboard"
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:38:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/dashboard"
                  ^^^^^^^^^^^^
app/controllers/events_controller.rb:45:11: C: [Corrected] Style/Semicolon: Do not use semicolons to terminate expressions.
  def edit;
          ^
app/controllers/events_controller.rb:46:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/events_controller.rb:46:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:47:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/events_controller.rb:48:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/dashboard"
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:48:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/dashboard"
                  ^^^^^^^^^^^^
app/controllers/events_controller.rb:58:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', success: 'Event was successfully created.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:71:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', success: 'Event was successfully updated.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:82:20: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    current_user = Account.find_by uuid: session[:useruuid]
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:83:36: C: [Corrected] Style/AndOr: Use || instead of or.
    if current_user.status_id == 1 or current_user.status_id == 2
                                   ^^
app/controllers/events_controller.rb:85:14: C: [Corrected] Rails/SaveBang: Use update! instead of update if the return value is not checked.
      @event.update(:type_id => 5)
             ^^^^^^
app/controllers/events_controller.rb:85:21: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      @event.update(:type_id => 5)
                    ^^^^^^^^^^^
app/controllers/events_controller.rb:87:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', success: 'Event was successfully made archived.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:90:9: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    else 
        ^
app/controllers/events_controller.rb:91:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/events", error: "Only Admins and Officers can delete events."
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:91:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/events", error: "Only Admins and Officers can delete events."
                  ^^^^^^^^^
app/controllers/events_controller.rb:91:37: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/events", error: "Only Admins and Officers can delete events."
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:6:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/points_controller.rb:10:1: C: [Corrected] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/points_controller.rb:10:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:11:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to "/dashboard" unless @current_user.status_id == 1
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:11:17: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to "/dashboard" unless @current_user.status_id == 1
                ^^^^^^^^^^^^
app/controllers/points_controller.rb:11:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:12:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 1
    ^^^^^^
app/controllers/points_controller.rb:13:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/dashboard"
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:13:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/dashboard"
                  ^^^^^^^^^^^^
app/controllers/points_controller.rb:21:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:24:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    render 'invalid' unless @current_user.status_id == 2
    ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:24:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:27:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/points_controller.rb:28:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:30:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:31:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    render 'invalid' unless @current_user.status_id == 2
    ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:35:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:36:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/points_controller.rb:37:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:42:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', error: 'User has already been marked present.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:44:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', success: 'Point was successfully created.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:49:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', error: 'User has already been marked present.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:51:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.html { redirect_back fallback_location: '/dashboard', success: 'Point was successfully created.' }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:55:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    render 'invalid' unless @current_user.status_id == 2
    ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:62:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/points_controller.rb:63:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:70:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:71:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    render 'invalid' unless @current_user.status_id == 2
    ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:75:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_back fallback_location: '/dashboard', success: 'Point was successfully destroyed.' }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:79:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = @accounts.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:80:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 2
    ^^^^^^
app/controllers/points_controller.rb:81:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      render 'invalid'
      ^^^^^^^^^^^^^^^^
app/controllers/points_controller.rb:86:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_back fallback_location: '/dashboard', success: 'Point was successfully destroyed.' }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:4:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:8:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    email = @user["email"] 
                  ^^^^^^^
app/controllers/profile_controller.rb:8:27: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    email = @user["email"] 
                          ^
app/controllers/profile_controller.rb:9:53: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render('/profile/error') unless email.end_with?("@tamu.edu")
                                                    ^^^^^^^^^^^
app/controllers/profile_controller.rb:12:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if curruser
    ^^
app/controllers/profile_controller.rb:12:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to '/dashboard' if curruser
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:13:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to '/dashboard'
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:19:136: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    @account = Account.new(UIN: params[:account][:UIN], FirstName: params[:account][:FirstName], LastName: params[:account][:LastName], 
                                                                                                                                       ^
app/controllers/profile_controller.rb:20:1: C: [Corrected] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
PhoneNumber: params[:account][:PhoneNumber], Email: get_user_email, status_id: member_id, uuid: session[:useruuid])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:20:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
PhoneNumber: params[:account][:PhoneNumber], Email: get_user_email, status_id: member_id, uuid: session[:useruuid])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:20:55: C: [Corrected] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                                                      PhoneNumber: params[:account][:PhoneNumber], Email: get_user_email, status_id: member_id, uuid: session[:useruuid]
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:20:55: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 54 instead of 27).
                                                      # rubocop:todo Layout/LineLength
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:20:55: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                                                      PhoneNumber: params[:account][:PhoneNumber], Email: get_user_email, status_id: member_id, uuid: session[:useruuid]
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:20:115: C: [Corrected] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
PhoneNumber: params[:account][:PhoneNumber], Email: get_user_email, status_id: member_id, uuid: session[:useruuid])
                                                                                                                  ^
app/controllers/profile_controller.rb:20:151: C: [Todo] Layout/LineLength: Line is too long. [168/150]
                                                      PhoneNumber: params[:account][:PhoneNumber], Email: get_user_email, status_id: member_id, uuid: session[:useruuid]
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:21:1: C: [Corrected] Layout/ClosingParenthesisIndentation: Indent ) to column 4 (not 0)
)
^
app/controllers/profile_controller.rb:21:28: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                           ^^^^^^^
app/controllers/profile_controller.rb:21:60: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                           ^^^^^^^^^^^^^
app/controllers/profile_controller.rb:21:104: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                                                                       ^^^^^^^^^^^^
app/controllers/profile_controller.rb:21:146: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                                                                                                                 ^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:21:151: C: [Corrected] Layout/LineLength: Line is too long. [272/150]
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:21:194: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                                                                                                                                                                 ^^^^^^^^^
app/controllers/profile_controller.rb:21:220: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                                                                                                                                                                                           ^^^^^^^^^^^^^
app/controllers/profile_controller.rb:21:245: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @account = Account.new(:UIN => params[:account][:UIN], :FirstName => params[:account][:FirstName], :LastName => params[:account][:LastName], :PhoneNumber => params[:account][:PhoneNumber], :Email => get_user_email, :status_id => member_id, :uuid => session[:useruuid])
                                                                                                                                                                                                                                                    ^^^^^^^^
app/controllers/profile_controller.rb:22:55: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 54 instead of 6).
                                                      # rubocop:enable Layout/LineLength
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/profile_controller.rb:24:35: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to("/dashboard", success: 'Account was successfully created.') }
                                  ^^^^^^^^^^^^
app/controllers/profile_controller.rb:32:1: C: [Corrected] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/signups_controller.rb:6:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:10:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:11:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 1
    ^^^^^^
app/controllers/signups_controller.rb:11:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to "/dashboard" unless @current_user.status_id == 1
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:11:17: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to "/dashboard" unless @current_user.status_id == 1
                ^^^^^^^^^^^^
app/controllers/signups_controller.rb:12:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/dashboard"
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:12:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/dashboard"
                  ^^^^^^^^^^^^
app/controllers/signups_controller.rb:31:14: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
  def create # rubocop:todo Metrics/AbcSize # rubocop:todo Style/InlineComment
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:31:14: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  def create # rubocop:todo Metrics/AbcSize
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:31:46: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
  def create # rubocop:todo Metrics/AbcSize, Style/InlineComment, Style/InlineComment
                                             ^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:33:3: C: [Todo] Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<8, 47, 5> 47.94/45]
  def create ...
  ^^^^^^^^^^
app/controllers/signups_controller.rb:36:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    eventDateTime = DateTime.new(event.Date.year, event.Date.month, event.Date.day, event.Time.hour, event.Time.min, event.Time.sec)
    ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:37:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    cutoffDateTime = eventDateTime - (6/24.0)
    ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:37:22: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    cutoffDateTime = eventDateTime - (6/24.0)
                     ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:37:40: C: [Corrected] Layout/SpaceAroundOperators: Surrounding space missing for operator /.
    cutoffDateTime = eventDateTime - (6/24.0)
                                       ^
app/controllers/signups_controller.rb:37:49: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    cutoffDateTime = eventDateTime - (6 / 24.0) # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:37:49: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    cutoffDateTime = eventDateTime - (6 / 24.0) # rubocop:todo Naming/VariableName
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:38:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)")
    ^^^^^^^^^^
app/controllers/signups_controller.rb:38:44: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)")
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:38:74: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    signupTime = DateTime.now.in_time_zone('Central Time (US & Canada)') # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:38:74: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)") # rubocop:todo Naming/VariableName
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:39:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
    ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:39:34: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                 ^^^^^^^^^^
app/controllers/signups_controller.rb:39:51: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                  ^^^^^^^^^^
app/controllers/signups_controller.rb:39:69: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                    ^^^^^^^^^^
app/controllers/signups_controller.rb:39:85: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                                    ^^^^^^^^^^
app/controllers/signups_controller.rb:39:102: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                                                     ^^^^^^^^^^
app/controllers/signups_controller.rb:39:118: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                                                                     ^^^^^^^^^^
app/controllers/signups_controller.rb:40:8: C: [Corrected] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (convertedTime > cutoffDateTime)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:40:9: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    if (convertedTime > cutoffDateTime)
        ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:40:25: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    if (convertedTime > cutoffDateTime)
                        ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:42:39: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:42:39: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:42:69: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to(event_path(@signup.event), error: "Cannot sign up for event within 6 hours of start time") }
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:43:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :new, status: :unprocessable_entity, location: @signup }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:44:69: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to(event_path(@signup.event), error: "Cannot sign up for event within 6 hours of start time") }
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:45:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :new, status: :unprocessable_entity, location: @signup }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:46:39: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName, Style/InlineComment # rubocop:todo Style/InlineComment
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:46:75: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName, Style/InlineComment, Style/InlineComment
                                                                          ^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:47:12: C: [Corrected] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if (@signup.save)
           ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:47:12: C: [Corrected] Style/RedundantParentheses: Don't use parentheses around a method call.
        if (@signup.save)
           ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:47:21: C: [Corrected] Rails/SaveBang: Use save! instead of save if the return value is not checked.
        if (@signup.save)
                    ^^^^
app/controllers/signups_controller.rb:49:25: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :created, location: @signup }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:51:25: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :created, location: @signup }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:59:3: C: [Todo] Metrics/AbcSize: Assignment Branch Condition size for update is too high. [<6, 47, 5> 47.64/45]
  def update ...
  ^^^^^^^^^^
app/controllers/signups_controller.rb:60:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    eventDateTime = DateTime.new(@signup.event.Date.year, @signup.event.Date.month, @signup.event.Date.day, @signup.event.Time.hour, @signup.event.Time.min, @signup.event.Time.sec)
    ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:60:151: C: [Corrected] Layout/LineLength: Line is too long. [180/150]
    eventDateTime = DateTime.new(@signup.event.Date.year, @signup.event.Date.month, @signup.event.Date.day, @signup.event.Time.hour, @signup.event.Time.min, @signup.event.Time.sec)
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:61:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    cutoffDateTime = eventDateTime - (6/24.0)
    ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:61:14: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
  def update # rubocop:todo Metrics/AbcSize # rubocop:todo Style/InlineComment
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:61:14: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  def update # rubocop:todo Metrics/AbcSize
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:61:22: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    cutoffDateTime = eventDateTime - (6/24.0)
                     ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:61:40: C: [Corrected] Layout/SpaceAroundOperators: Surrounding space missing for operator /.
    cutoffDateTime = eventDateTime - (6/24.0)
                                       ^
app/controllers/signups_controller.rb:62:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)")
    ^^^^^^^^^^
app/controllers/signups_controller.rb:62:44: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)")
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:63:5: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
    ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:63:34: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                 ^^^^^^^^^^
app/controllers/signups_controller.rb:63:51: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                  ^^^^^^^^^^
app/controllers/signups_controller.rb:63:69: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                    ^^^^^^^^^^
app/controllers/signups_controller.rb:63:85: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                                    ^^^^^^^^^^
app/controllers/signups_controller.rb:63:102: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                                                     ^^^^^^^^^^
app/controllers/signups_controller.rb:63:118: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    convertedTime = DateTime.new(signupTime.year, signupTime.month, signupTime.day, signupTime.hour, signupTime.min, signupTime.sec)
                                                                                                                     ^^^^^^^^^^
app/controllers/signups_controller.rb:63:133: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    eventDateTime = DateTime.new(@signup.event.Date.year, @signup.event.Date.month, @signup.event.Date.day, @signup.event.Time.hour, 
                                                                                                                                    ^
app/controllers/signups_controller.rb:64:1: C: [Corrected] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
@signup.event.Time.min, @signup.event.Time.sec)
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:64:8: C: [Corrected] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (convertedTime > cutoffDateTime)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:64:9: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    if (convertedTime > cutoffDateTime)
        ^^^^^^^^^^^^^
app/controllers/signups_controller.rb:64:25: C: [Todo] Naming/VariableName: Use snake_case for variable names.
    if (convertedTime > cutoffDateTime)
                        ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:64:47: C: [Corrected] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
@signup.event.Time.min, @signup.event.Time.sec)
                                              ^
app/controllers/signups_controller.rb:65:1: C: [Corrected] Layout/ClosingParenthesisIndentation: Indent ) to column 4 (not 0)
)
^
app/controllers/signups_controller.rb:65:14: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
  def update # rubocop:todo Metrics/AbcSize, Style/InlineComment # rubocop:todo Style/InlineComment
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:65:46: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
  def update # rubocop:todo Metrics/AbcSize, Style/InlineComment, Style/InlineComment
                                             ^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:66:37: C: [Corrected] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        format.html { redirect_to({ :action => "edit"}, error: "Cannot sign up for event within 6 hours of start time") }
                                    ^^^^^^^^^^
app/controllers/signups_controller.rb:66:48: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to({ :action => "edit"}, error: "Cannot sign up for event within 6 hours of start time") }
                                               ^^^^^^
app/controllers/signups_controller.rb:66:49: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    cutoffDateTime = eventDateTime - (6 / 24.0) # rubocop:todo Naming/VariableName
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:66:54: C: [Corrected] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        format.html { redirect_to({ :action => "edit"}, error: "Cannot sign up for event within 6 hours of start time") }
                                                     ^
app/controllers/signups_controller.rb:66:64: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to({ :action => "edit"}, error: "Cannot sign up for event within 6 hours of start time") }
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:67:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :edit, status: :unprocessable_entity, location: @signup }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:67:44: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)") # rubocop:todo Naming/VariableName
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:67:49: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    cutoffDateTime = eventDateTime - (6 / 24.0) # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:67:49: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    cutoffDateTime = eventDateTime - (6 / 24.0) # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:67:74: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    signupTime = DateTime.now.in_time_zone("Central Time (US & Canada)") # rubocop:todo Naming/VariableName
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:68:74: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    signupTime = DateTime.now.in_time_zone('Central Time (US & Canada)') # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:68:74: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    signupTime = DateTime.now.in_time_zone('Central Time (US & Canada)') # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:71:12: C: [Corrected] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if (@signup.save)
           ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:71:12: C: [Corrected] Style/RedundantParentheses: Don't use parentheses around a method call.
        if (@signup.save)
           ^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:71:21: C: [Corrected] Rails/SaveBang: Use save! instead of save if the return value is not checked.
        if (@signup.save)
                    ^^^^
app/controllers/signups_controller.rb:71:39: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:72:39: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:72:39: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName # rubocop:todo Style/InlineComment
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:73:25: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :created, location: @signup }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:73:45: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to({ action: "edit" }, error: "Cannot sign up for event within 6 hours of start time") }
                                            ^^^^^^
app/controllers/signups_controller.rb:73:62: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to({ action: "edit" }, error: "Cannot sign up for event within 6 hours of start time") }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:74:23: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
        format.json { render :edit, status: :unprocessable_entity, location: @signup }
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:80:25: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
          format.json { render :show, status: :created, location: @signup }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:80:39: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName, Style/InlineComment # rubocop:todo Style/InlineComment
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:80:75: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
    if convertedTime > cutoffDateTime # rubocop:todo Naming/VariableName, Style/InlineComment, Style/InlineComment
                                                                          ^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:86:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_back fallback_location: '/dashboard', error: 'You can not unregister for an event that has already occured.'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:90:1: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/signups_controller.rb:92:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if points
    ^^
app/controllers/signups_controller.rb:92:5: C: [Corrected] Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if points ...
    ^^^^^^^^^
app/controllers/signups_controller.rb:93:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_back fallback_location: '/dashboard', error: 'You can not unregister for an event that has already occured.'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:97:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_back fallback_location: '/dashboard', success: 'Event has successfully been dropped.' }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:99:5: C: [Corrected] Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    points.destroy! if points
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/signups_controller.rb:102:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      format.html { redirect_back fallback_location: '/dashboard', success: 'Event has successfully been dropped.' }
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/statuses_controller.rb:6:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/statuses_controller.rb:10:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/statuses_controller.rb:11:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 1
    ^^^^^^
app/controllers/statuses_controller.rb:11:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to "/dashboard" unless @current_user.status_id == 1
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/statuses_controller.rb:11:17: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to "/dashboard" unless @current_user.status_id == 1
                ^^^^^^^^^^^^
app/controllers/statuses_controller.rb:12:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/dashboard"
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/statuses_controller.rb:12:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/dashboard"
                  ^^^^^^^^^^^^
app/controllers/types_controller.rb:6:10: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  layout "default_page"
         ^^^^^^^^^^^^^^
app/controllers/types_controller.rb:10:21: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    @current_user = Account.find_by uuid: session[:useruuid]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/types_controller.rb:11:5: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless @current_user.status_id == 1
    ^^^^^^
app/controllers/types_controller.rb:11:5: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    redirect_to "/dashboard" unless @current_user.status_id == 1
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/types_controller.rb:11:17: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to "/dashboard" unless @current_user.status_id == 1
                ^^^^^^^^^^^^
app/controllers/types_controller.rb:12:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      redirect_to "/dashboard"
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/types_controller.rb:12:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to "/dashboard"
                  ^^^^^^^^^^^^
app/helpers/events_helper.rb:4:1: C: [Corrected] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def convertBool(boolean)
^^^^
app/helpers/events_helper.rb:4:9: C: [Todo] Naming/MethodName: Use snake_case for method names.
    def convertBool(boolean)
        ^^^^^^^^^^^
app/helpers/events_helper.rb:4:28: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
  def convertBool(boolean) # rubocop:todo Naming/MethodName # rubocop:todo Style/InlineComment
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:4:28: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  def convertBool(boolean) # rubocop:todo Naming/MethodName
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:4:62: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
  def convertBool(boolean) # rubocop:todo Naming/MethodName, Style/InlineComment, Style/InlineComment
                                                             ^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:5:5: C: [Todo] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        boolean ? "Yes" : "No"
    ^^^^
app/helpers/events_helper.rb:5:19: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        boolean ? "Yes" : "No"
                  ^^^^^
app/helpers/events_helper.rb:5:27: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        boolean ? "Yes" : "No"
                          ^^^^
app/helpers/events_helper.rb:5:30: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
      boolean ? 'Yes' : 'No' # rubocop:todo Layout/IndentationWidth # rubocop:todo Style/InlineComment
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:5:30: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
      boolean ? 'Yes' : 'No' # rubocop:todo Layout/IndentationWidth
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:5:70: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of Style/InlineComment.
      boolean ? 'Yes' : 'No' # rubocop:todo Layout/IndentationWidth, Style/InlineComment, Style/InlineComment
                                                                     ^^^^^^^^^^^^^^^^^^^
app/models/account.rb:6:3: C: [Todo] Rails/UniqueValidationWithoutIndex: Uniqueness validation should be with a unique index.
  validates :Email, uniqueness: true, presence: true
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:6:54: C: [Corrected] Style/DoubleCopDisableDirective: More than one disable comment on one line.
  validates :Email, uniqueness: true, presence: true # rubocop:todo Rails/UniqueValidationWithoutIndex # rubocop:todo Style/InlineComment
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:6:54: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  validates :Email, uniqueness: true, presence: true # rubocop:todo Rails/UniqueValidationWithoutIndex
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:7:3: C: [Todo] Rails/UniqueValidationWithoutIndex: Uniqueness validation should be with a unique index.
  validates :UIN, uniqueness: true, presence: true, length: { is: 9 }
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:7:71: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  validates :UIN, uniqueness: true, presence: true, length: { is: 9 } # rubocop:todo Rails/UniqueValidationWithoutIndex
                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:8:3: C: [Todo] Rails/UniqueValidationWithoutIndex: Uniqueness validation should be with a unique index.
  validates :PhoneNumber, uniqueness: true, presence: true, length: { is: 10 }
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:8:80: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
  validates :PhoneNumber, uniqueness: true, presence: true, length: { is: 10 } # rubocop:todo Rails/UniqueValidationWithoutIndex
                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:4:9: C: [Corrected] Style/WordArray: Use %w or %W for an array of words.
roles = ['Admin', 'Officer', 'Member', 'Inactive']
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:5:33: C: [Corrected] Style/SymbolProc: Pass &:Value as an argument to map instead of a block.
existing_roles = Status.all.map { |r| r.Value }
                                ^^^^^^^^^^^^^^^
db/seeds.rb:8:3: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
  unless existing_roles.include?(role)
  ^^^^^^
db/seeds.rb:13:4: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { 
   ^
db/seeds.rb:13:5: C: [Corrected] Layout/FirstHashElementLineBreak: Add a line break before the first element of a multi-line hash.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
    ^^^^^^^^^^^^^^^^
db/seeds.rb:13:23: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
                      ^^^^^^^^^^^^^^^^
db/seeds.rb:13:41: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
                                        ^^^^^^^^^^^^^^^^^
db/seeds.rb:13:60: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:13:88: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
                                                                                       ^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:13:112: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
                                                                                                               ^^^^^^^^^^^^
db/seeds.rb:13:125: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, 
                                                                                                                            ^
db/seeds.rb:13:151: C: [Corrected] Layout/LineLength: Line is too long. [151/150]
  { UIN: 167_421_892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1_234_567_890, Email: 'joe@smith.com', status_id: 2, uuid: 'TEST_ACCOUNT_01' },
                                                                                                                                                      ^
db/seeds.rb:14:1: C: [Corrected] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
UIN: 167_421_892, 
^^^^^^^^^^^^^^^^
db/seeds.rb:14:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_01' },
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:5: C: [Corrected] Layout/FirstHashElementLineBreak: Add a line break before the first element of a multi-line hash.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
    ^^^^^^^^^^^^^^^^
db/seeds.rb:14:18: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
UIN: 167_421_892, 
                 ^
db/seeds.rb:14:23: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
                      ^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:25: C: [Corrected] Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element.
uuid: 'TEST_ACCOUNT_01' },
                        ^
db/seeds.rb:14:44: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
                                           ^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:65: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:93: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:124: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
                                                                                                                           ^^^^^^^^^^^^
db/seeds.rb:14:137: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { UIN: 718_276_728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8_729_106_896, Email: 'rishavkrd11@tamu.edu', status_id: 1, 
                                                                                                                                        ^
db/seeds.rb:15:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_02' },
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:15:4: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { 
   ^
db/seeds.rb:15:10: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 167421892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1234567890, Email: 'joe@smith.com', status_id: 2 , uuid: 'TEST_ACCOUNT_01' },
         ^^^^^^^^^
db/seeds.rb:15:18: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
FirstName: 'Joe', 
                 ^
db/seeds.rb:15:25: C: [Corrected] Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element.
uuid: 'TEST_ACCOUNT_02' },
                        ^
db/seeds.rb:15:71: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 167421892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1234567890, Email: 'joe@smith.com', status_id: 2 , uuid: 'TEST_ACCOUNT_01' },
                                                                      ^^^^^^^^^^
db/seeds.rb:15:119: C: [Corrected] Layout/SpaceBeforeComma: Space found before comma.
  { UIN: 167421892, FirstName: 'Joe', LastName: 'Smith', PhoneNumber: 1234567890, Email: 'joe@smith.com', status_id: 2 , uuid: 'TEST_ACCOUNT_01' },
                                                                                                                      ^
db/seeds.rb:16:1: C: [Corrected] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
UIN: 718_276_728, 
^^^^^^^^^^^^^^^^
db/seeds.rb:16:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
LastName: 'Smith',
^^^^^^^^^^^^^^^^^
db/seeds.rb:16:10: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 718276728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8729106896, Email: 'rishavkrd11@tamu.edu', status_id: 1, uuid: 'TEST_ACCOUNT_02' },
         ^^^^^^^^^
db/seeds.rb:16:18: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
UIN: 718_276_728, 
                 ^
db/seeds.rb:16:19: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
LastName: 'Smith', 
                  ^
db/seeds.rb:16:76: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 718276728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8729106896, Email: 'rishavkrd11@tamu.edu', status_id: 1, uuid: 'TEST_ACCOUNT_02' },
                                                                           ^^^^^^^^^^
db/seeds.rb:16:151: C: [Corrected] Layout/LineLength: Line is too long. [154/150]
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, uuid: 'TEST_ACCOUNT_03' },
                                                                                                                                                      ^^^^
db/seeds.rb:16:151: C: [Corrected] Layout/LineLength: Line is too long. [158/150]
  { UIN: 718276728, FirstName: 'Rishav', LastName: 'Dokania', PhoneNumber: 8729106896, Email: 'rishavkrd11@tamu.edu', status_id: 1, uuid: 'TEST_ACCOUNT_02' },
                                                                                                                                                      ^^^^^^^^
db/seeds.rb:17:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
PhoneNumber: 1_234_567_890,
^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:17:10: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 123458729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5784297498, Email: 'sam@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_03' },
         ^^^^^^^^^
db/seeds.rb:17:21: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
FirstName: 'Rishav', 
                    ^
db/seeds.rb:17:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
PhoneNumber: 1_234_567_890, 
                           ^
db/seeds.rb:17:75: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 123458729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5784297498, Email: 'sam@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_03' },
                                                                          ^^^^^^^^^^
db/seeds.rb:17:128: C: [Corrected] Layout/SpaceAfterColon: Space missing after colon.
  { UIN: 123458729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5784297498, Email: 'sam@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_03' },
                                                                                                                               ^
db/seeds.rb:17:151: C: [Corrected] Layout/LineLength: Line is too long. [153/150]
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, uuid: 'TEST_ACCOUNT_04' }
                                                                                                                                                      ^^^
db/seeds.rb:18:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
Email: 'joe@smith.com',
^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:18:10: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 162719977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6767982934, Email: 'john@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_04' },
         ^^^^^^^^^
db/seeds.rb:18:21: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
LastName: 'Dokania', 
                    ^
db/seeds.rb:18:24: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
Email: 'joe@smith.com', 
                       ^
db/seeds.rb:18:74: C: [Corrected] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  { UIN: 162719977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6767982934, Email: 'john@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_04' },
                                                                         ^^^^^^^^^^
db/seeds.rb:18:128: C: [Corrected] Layout/SpaceAfterColon: Space missing after colon.
  { UIN: 162719977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6767982934, Email: 'john@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_04' },
                                                                                                                               ^
db/seeds.rb:18:148: C: [Corrected] Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
  { UIN: 162719977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6767982934, Email: 'john@tamu.edu', status_id: 2, uuid:'TEST_ACCOUNT_04' },
                                                                                                                                                   ^
db/seeds.rb:19:1: C: [Corrected] Layout/ClosingParenthesisIndentation: Align ) with (.
)
^
db/seeds.rb:19:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
status_id: 2,
^^^^^^^^^^^^
db/seeds.rb:19:2: C: [Corrected] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
])
 ^
db/seeds.rb:19:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
PhoneNumber: 8_729_106_896, 
                           ^
db/seeds.rb:20:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_01'
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:20:5: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    uuid: 'TEST_ACCOUNT_01' 
    ^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:20:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    uuid: 'TEST_ACCOUNT_01' 
                           ^
db/seeds.rb:20:31: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
Email: 'rishavkrd11@tamu.edu', 
                              ^
db/seeds.rb:21:1: C: [Corrected] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.
},
^
db/seeds.rb:22:5: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    uuid: 'TEST_ACCOUNT_02' 
    ^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:22:9: C: [Corrected] Style/WordArray: Use %w or %W for an array of words.
types = ['Meeting', 'Event', 'Social', 'Other', 'Inactive']
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:22:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    uuid: 'TEST_ACCOUNT_02' 
                           ^
db/seeds.rb:23:1: C: [Corrected] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.
},
^
db/seeds.rb:23:31: C: [Corrected] Style/SymbolProc: Pass &:Value as an argument to map instead of a block.
existing_types = Type.all.map { |r| r.Value }
                              ^^^^^^^^^^^^^^^
db/seeds.rb:24:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
FirstName: 'Rishav',
^^^^^^^^^^^^^^^^^^^
db/seeds.rb:24:5: C: [Corrected] Layout/FirstHashElementLineBreak: Add a line break before the first element of a multi-line hash.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
    ^^^^^^^^^^^^^^^^
db/seeds.rb:24:23: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
                      ^^^^^^^^^^^^^^^^
db/seeds.rb:24:41: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
                                        ^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:24:64: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:24:92: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
                                                                                           ^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:24:115: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:24:128: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { UIN: 123_458_729, FirstName: 'Sam', LastName: 'McDonalds', PhoneNumber: 5_784_297_498, Email: 'sam@tamu.edu', status_id: 2, 
                                                                                                                               ^
db/seeds.rb:25:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_03' },
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:25:25: C: [Corrected] Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element.
uuid: 'TEST_ACCOUNT_03' },
                        ^
db/seeds.rb:26:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
PhoneNumber: 8_729_106_896,
^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:26:3: C: [Corrected] Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
  unless existing_types.include?(type)
  ^^^^^^
db/seeds.rb:26:5: C: [Corrected] Layout/FirstHashElementLineBreak: Add a line break before the first element of a multi-line hash.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
    ^^^^^^^^^^^^^^^^
db/seeds.rb:26:23: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
                      ^^^^^^^^^^^^^^^^^
db/seeds.rb:26:42: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
                                         ^^^^^^^^^^^^^^^^^^^
db/seeds.rb:26:63: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:26:91: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
                                                                                          ^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:26:115: C: [Corrected] Layout/MultilineHashKeyLineBreaks: Each key in a multi-line hash must start on a separate line.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:26:128: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { UIN: 162_719_977, FirstName: 'John', LastName: 'Goodman', PhoneNumber: 6_767_982_934, Email: 'john@tamu.edu', status_id: 2, 
                                                                                                                               ^
db/seeds.rb:27:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_04' }
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:27:25: C: [Corrected] Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element.
uuid: 'TEST_ACCOUNT_04' }
                        ^
db/seeds.rb:28:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
status_id: 1,
^^^^^^^^^^^^
db/seeds.rb:29:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_02'
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:29:4: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
end         
   ^^^^^^^^^
db/seeds.rb:31:4: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { 
   ^
db/seeds.rb:32:1: C: [Corrected] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
UIN: 123_458_729, 
^^^^^^^^^^^^^^^^
db/seeds.rb:32:18: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
UIN: 123_458_729, 
                 ^
db/seeds.rb:33:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
FirstName: 'Sam',
^^^^^^^^^^^^^^^^
db/seeds.rb:33:18: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
FirstName: 'Sam', 
                 ^
db/seeds.rb:34:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
LastName: 'McDonalds',
^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:34:23: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
LastName: 'McDonalds', 
                      ^
db/seeds.rb:35:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
PhoneNumber: 5_784_297_498,
^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:35:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
PhoneNumber: 5_784_297_498, 
                           ^
db/seeds.rb:36:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
Email: 'sam@tamu.edu',
^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:36:23: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
Email: 'sam@tamu.edu', 
                      ^
db/seeds.rb:37:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
status_id: 2,
^^^^^^^^^^^^
db/seeds.rb:38:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_03'
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:38:5: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    uuid: 'TEST_ACCOUNT_03' 
    ^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:38:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    uuid: 'TEST_ACCOUNT_03' 
                           ^
db/seeds.rb:39:1: C: [Corrected] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.
},
^
db/seeds.rb:40:4: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
  { 
   ^
db/seeds.rb:41:1: C: [Corrected] Layout/ClosingParenthesisIndentation: Align ) with (.
)
^
db/seeds.rb:41:1: C: [Corrected] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
UIN: 162_719_977, 
^^^^^^^^^^^^^^^^
db/seeds.rb:41:18: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
UIN: 162_719_977, 
                 ^
db/seeds.rb:42:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
FirstName: 'John',
^^^^^^^^^^^^^^^^^
db/seeds.rb:42:2: C: [Corrected] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument.
])
 ^
db/seeds.rb:42:19: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
FirstName: 'John', 
                  ^
db/seeds.rb:43:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
LastName: 'Goodman',
^^^^^^^^^^^^^^^^^^^
db/seeds.rb:43:21: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
LastName: 'Goodman', 
                    ^
db/seeds.rb:44:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
PhoneNumber: 6_767_982_934,
^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:44:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
PhoneNumber: 6_767_982_934, 
                           ^
db/seeds.rb:45:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
Email: 'john@tamu.edu',
^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:45:24: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
Email: 'john@tamu.edu', 
                       ^
db/seeds.rb:46:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
status_id: 2,
^^^^^^^^^^^^
db/seeds.rb:47:1: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
uuid: 'TEST_ACCOUNT_04'
^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:47:5: C: [Corrected] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    uuid: 'TEST_ACCOUNT_04' 
    ^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:47:28: C: [Corrected] Layout/TrailingWhitespace: Trailing whitespace detected.
    uuid: 'TEST_ACCOUNT_04' 
                           ^
db/seeds.rb:48:1: C: [Corrected] Layout/FirstHashElementIndentation: Indent the right brace the same as the start of the line where the left brace is.
}
^
spec/feature/integration_spec.rb:13:1: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
#   end
^^^^^^^
spec/feature/integration_spec.rb:15:1: C: [Corrected] Layout/EmptyLines: Extra blank line detected.
spec/feature/integration_spec.rb:18:1: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
#     expect(page).to have_content('Welcome')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:21:1: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
# end
^^^^^
spec/feature/integration_spec.rb:41:1: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
# end
^^^^^
spec/feature/integration_spec.rb:63:1: C: [Corrected] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
# end
^^^^^
spec/feature/integration_spec.rb:64:1: C: [Corrected] Layout/EmptyLinesAroundBeginBody: Extra empty line detected at begin body end.
spec/feature/integration_spec.rb:65:4: C: [Corrected] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/requests/auth0_spec.rb:6:60: W: [Corrected] Lint/RedundantCopDisableDirective: Unnecessary disabling of RSpec/EmptyExampleGroup.
RSpec.describe('Auth0s', type: :request) do # rubocop:todo RSpec/EmptyExampleGroup, Style/InlineComment
                                                           ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/auth0_spec.rb:8:12: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /callback" do
           ^^^^^^^^^^^^^^^
spec/requests/auth0_spec.rb:9:8: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/auth0_spec.rb:10:11: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      get "/auth/auth0/callback"
          ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/auth0_spec.rb:11:7: C: [Corrected] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
      expect(response).to have_http_status(302) #needs to be fixed to :success
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/auth0_spec.rb:11:44: C: [Corrected] RSpec/Rails/HttpStatus: Prefer :found over 302 to describe HTTP status code.
      expect(response).to have_http_status(302) #needs to be fixed to :success
                                           ^^^
spec/requests/auth0_spec.rb:11:49: C: [Corrected] Layout/LeadingCommentSpace: Missing space after #.
      expect(response).to have_http_status(302) #needs to be fixed to :success
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/auth0_spec.rb:11:49: C: [Todo] Style/InlineComment: Avoid trailing inline comments.
      expect(response).to have_http_status(302) #needs to be fixed to :success
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

96 files inspected, 463 offenses detected, 463 offenses corrected
